{"version":3,"file":"js/540.c393ef3b.js","mappings":"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","sources":["webpack://week6/../src/index.ts","webpack://week6/./src/libs/emitter.js","webpack://week6/./src/views/CartView.vue","webpack://week6/./src/views/CartView.vue?73a2"],"sourcesContent":["export type EventType = string | symbol;\n\n// An event handler can take an optional event argument\n// and should not return a value\nexport type Handler<T = unknown> = (event: T) => void;\nexport type WildcardHandler<T = Record<string, unknown>> = (\n\ttype: keyof T,\n\tevent: T[keyof T]\n) => void;\n\n// An array of all currently registered event handlers for a type\nexport type EventHandlerList<T = unknown> = Array<Handler<T>>;\nexport type WildCardEventHandlerList<T = Record<string, unknown>> = Array<WildcardHandler<T>>;\n\n// A map of event types and their corresponding event handlers.\nexport type EventHandlerMap<Events extends Record<EventType, unknown>> = Map<\n\tkeyof Events | '*',\n\tEventHandlerList<Events[keyof Events]> | WildCardEventHandlerList<Events>\n>;\n\nexport interface Emitter<Events extends Record<EventType, unknown>> {\n\tall: EventHandlerMap<Events>;\n\n\ton<Key extends keyof Events>(type: Key, handler: Handler<Events[Key]>): void;\n\ton(type: '*', handler: WildcardHandler<Events>): void;\n\n\toff<Key extends keyof Events>(type: Key, handler?: Handler<Events[Key]>): void;\n\toff(type: '*', handler: WildcardHandler<Events>): void;\n\n\temit<Key extends keyof Events>(type: Key, event: Events[Key]): void;\n\temit<Key extends keyof Events>(type: undefined extends Events[Key] ? Key : never): void;\n}\n\n/**\n * Mitt: Tiny (~200b) functional event emitter / pubsub.\n * @name mitt\n * @returns {Mitt}\n */\nexport default function mitt<Events extends Record<EventType, unknown>>(\n\tall?: EventHandlerMap<Events>\n): Emitter<Events> {\n\ttype GenericEventHandler =\n\t\t| Handler<Events[keyof Events]>\n\t\t| WildcardHandler<Events>;\n\tall = all || new Map();\n\n\treturn {\n\n\t\t/**\n\t\t * A Map of event names to registered handler functions.\n\t\t */\n\t\tall,\n\n\t\t/**\n\t\t * Register an event handler for the given type.\n\t\t * @param {string|symbol} type Type of event to listen for, or `'*'` for all events\n\t\t * @param {Function} handler Function to call in response to given event\n\t\t * @memberOf mitt\n\t\t */\n\t\ton<Key extends keyof Events>(type: Key, handler: GenericEventHandler) {\n\t\t\tconst handlers: Array<GenericEventHandler> | undefined = all!.get(type);\n\t\t\tif (handlers) {\n\t\t\t\thandlers.push(handler);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tall!.set(type, [handler] as EventHandlerList<Events[keyof Events]>);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Remove an event handler for the given type.\n\t\t * If `handler` is omitted, all handlers of the given type are removed.\n\t\t * @param {string|symbol} type Type of event to unregister `handler` from, or `'*'`\n\t\t * @param {Function} [handler] Handler function to remove\n\t\t * @memberOf mitt\n\t\t */\n\t\toff<Key extends keyof Events>(type: Key, handler?: GenericEventHandler) {\n\t\t\tconst handlers: Array<GenericEventHandler> | undefined = all!.get(type);\n\t\t\tif (handlers) {\n\t\t\t\tif (handler) {\n\t\t\t\t\thandlers.splice(handlers.indexOf(handler) >>> 0, 1);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tall!.set(type, []);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Invoke all handlers for the given type.\n\t\t * If present, `'*'` handlers are invoked after type-matched handlers.\n\t\t *\n\t\t * Note: Manually firing '*' handlers is not supported.\n\t\t *\n\t\t * @param {string|symbol} type The event type to invoke\n\t\t * @param {Any} [evt] Any value (object is recommended and powerful), passed to each handler\n\t\t * @memberOf mitt\n\t\t */\n\t\temit<Key extends keyof Events>(type: Key, evt?: Events[Key]) {\n\t\t\tlet handlers = all!.get(type);\n\t\t\tif (handlers) {\n\t\t\t\t(handlers as EventHandlerList<Events[keyof Events]>)\n\t\t\t\t\t.slice()\n\t\t\t\t\t.map((handler) => {\n\t\t\t\t\t\thandler(evt!);\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\thandlers = all!.get('*');\n\t\t\tif (handlers) {\n\t\t\t\t(handlers as WildCardEventHandlerList<Events>)\n\t\t\t\t\t.slice()\n\t\t\t\t\t.map((handler) => {\n\t\t\t\t\t\thandler(type, evt!);\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n}\n","import mitt from 'mitt'\n\n// mitt只能執行一次，所以要獨立一個檔案\nconst emitter = mitt()\nexport default emitter\n","<template>\n  <h2>購物車</h2>\n  <!-- 產品資料 -->\n  <table class=\"table align-middle\">\n    <thead>\n      <tr>\n        <th>圖片</th>\n        <th>商品名稱</th>\n        <th>價格</th>\n        <th></th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr v-for=\"item in products\" :key=\"item.id\">\n        <td style=\"width: 200px\">\n          <div\n            :style=\"{ backgroundImage: `url(${item.imageUrl})` }\"\n            style=\"\n              height: 100px;\n              background-size: cover;\n              background-position: center;\n            \"\n          ></div>\n        </td>\n        <td>{{ item.title }}</td>\n        <td>\n          <div class=\"h5\" v-if=\"item.price === item.origin_price\">\n            {{ item.price }} 元\n          </div>\n          <template v-else>\n            <del class=\"h6\">原價 {{ item.origin_price }} 元</del>\n            <div class=\"h5\">現在只要 {{ item.price }} 元</div>\n          </template>\n        </td>\n        <td>\n          <div class=\"btn-group btn-group-sm\">\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary\"\n              @click=\"openProductModal(item.id)\"\n              :disabled=\"isLoadingItem === item.id\"\n            >\n              查看更多\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-danger\"\n              @click=\"addToCart(item.id)\"\n              :disabled=\"isLoadingItem === item.id\"\n            >\n              <span\n                class=\"spinner-grow spinner-grow-sm\"\n                v-show=\"isLoadingItem === item.id\"\n              ></span>\n              加到購物車\n            </button>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</template>\n\n<script>\nimport emitter from '@/libs/emitter'\n\nexport default {\n  data () {\n    return {\n      cartData: {},\n      products: [],\n      isLoadingItem: ''\n    }\n  },\n  methods: {\n    getProducts () {\n      this.$http.get(`${process.env.VUE_APP_API}/api/${process.env.VUE_APP_PATH}/products/all`).then(\n        (res) => {\n          this.products = res.data.products\n        }\n      )\n    },\n    addToCart (id, qty = 1) {\n      const data = {\n        product_id: id,\n        qty\n      }\n      this.isLoadingItem = id\n      this.$http.post(`${process.env.VUE_APP_API}/api/${process.env.VUE_APP_PATH}/cart`, { data }).then(\n        (res) => {\n          console.log(res)\n          this.isLoadingItem = ''\n          emitter.emit('get-cart')\n        }\n      )\n    }\n  },\n  mounted () {\n    this.getProducts()\n  }\n}\n</script>\n","import { render } from \"./CartView.vue?vue&type=template&id=6a1c7d2a\"\nimport script from \"./CartView.vue?vue&type=script&lang=js\"\nexport * from \"./CartView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/joseph/Joseph/Hexschool/2022-Vue3/week6/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["all","Map","on","type","handler","handlers","get","push","set","off","splice","indexOf","emit","evt","slice","map","emitter","mitt","_createElementVNode","class","style","_hoisted_1","_hoisted_3","_createElementBlock","_Fragment","_renderList","$data","item","key","id","backgroundImage","imageUrl","_toDisplayString","title","price","origin_price","onClick","_ctx","disabled","_hoisted_9","$options","data","cartData","products","isLoadingItem","methods","getProducts","this","$http","then","res","addToCart","qty","product_id","post","console","log","mounted","__exports__","render"],"sourceRoot":""}